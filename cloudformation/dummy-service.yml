AWSTemplateFormatVersion: "2010-09-09"

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                Resource: arn:aws:logs:*:*:*

  DummyLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          exports.handler = function(event, context, callback) {
            console.log('Received event:', JSON.stringify(event, null, 2));
            var res ={
              "statusCode": 200,
              "headers": {
                "Content-Type": "*/*"
              }
            };
            res.body = '{"amount":1.0,"base":"EUR","date":"2021-02-02","rates":{"AUD":1.5847,"BGN":1.9558,"BRL":6.4904,"CAD":1.5422,"CHF":1.0808,"ZAR":18.0067}}';
            callback(null, res);
          };
      Description: Dummy service that always returns the same
      FunctionName: dummy-backing-service
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: nodejs10.x

  DummyHttpApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Description: "HTTP endpoint for dummy data"
      Name: DummyHttpApi
      ProtocolType: HTTP

  DummyIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref DummyHttpApi
      IntegrationMethod: GET
      IntegrationType: AWS_PROXY
      IntegrationUri: !GetAtt DummyLambda.Arn
      PayloadFormatVersion: 2.0

  DummyRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref DummyHttpApi
      RouteKey: "GET /"
      Target: !Join [ /, [ integrations, !Ref DummyIntegration ] ]

  DummyStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref DummyHttpApi
      DeploymentId: !Ref DummyDeployment
      Description: "Some stage"
      StageName: dev

  DummyDeployment:
    Type: AWS::ApiGatewayV2::Deployment
    Properties:
      ApiId: !Ref DummyHttpApi
    DependsOn: DummyRoute

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt DummyLambda.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ""
        - - "arn:aws:execute-api:"
          - !Ref AWS::Region
          - ":"
          - !Ref AWS::AccountId
          - ":"
          - !Ref DummyHttpApi
          - "/*/*/*"

Outputs:
  DummyEndpoint:
    Value: !Join
      - ""
      - - "https://"
        - !Ref DummyHttpApi
        - ".execute-api."
        - !Ref AWS::Region
        - ".amazonaws.com/"
        - !Ref DummyStage
        - "/"
    Export:
      Name: DummyEndpoint
